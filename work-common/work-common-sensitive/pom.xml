<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cn.youngkbt</groupId>
        <artifactId>work-common</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>work-common-sensitive</artifactId>
    
    <description>
        介绍：数据脱敏模块。
        
        实现数据脱敏步骤：
            1、提供 Sensitive 注解，在实体类的属性上使用，注解里可以指定脱敏的类型
            2、自定义类继承和实现 jackson 提供的 JsonSerializer、ContextualSerializer，这样在返回数据时，会自动触发自定义类的指定方法，将带有 Sensitive 注解的属性进行自动传入（Sensitive 注解使用了 JsonSerialize 的 use 实现自动传入）
        
        脱敏支持的类型请看 SensitiveStrategy 枚举类。主要利用了 hutool 的脱敏方法。
        模块支持自定义脱敏类型，实现 SensitiveService 接口，主要基于用户权限来决定是否脱敏并返回。
    </description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>cn.youngkbt</groupId>
            <artifactId>work-common-core</artifactId>
            <version>1.0.0</version>
        </dependency>
    </dependencies>
</project>